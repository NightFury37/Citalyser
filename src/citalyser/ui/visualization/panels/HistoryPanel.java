/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package citalyser.ui.visualization.panels;

import citalyser.model.query.Query;
import citalyser.ui.control.DisplayMaster;
import citalyser.ui.utils.UiUtils;
import citalyser.util.CommonUtils;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Set;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.apache.log4j.Logger;

/**
 *
 * @author Abhishek
 */
public class HistoryPanel extends javax.swing.JPanel {

    /**
     * Creates new form HistoryPanel
     */
    static Logger logger = Logger.getLogger(HistoryPanel.class.getName());
    private HashMap<String,Query> historyMap;
    private DisplayMaster displayMaster;
    public HistoryPanel() {
        initComponents();
        //setBackground(new java.awt.Color(0, 0, 0, 150));
    }
     public void setDisplayMaster(DisplayMaster displayMaster) {
        this.displayMaster = displayMaster;
    }
    public void displayHistory(HashMap<String,Query> hm)
    {
        this.historyMap = hm;
        logger.debug("Hashmap : " + hm.keySet().toString());
        jTable1.setModel(getTableModel(hm));
        this.setVisible(true);
    }
    
    private TableModel getTableModel(HashMap<String,Query> hm)
    {
        
        final String[] columnNames = {"S. No","Query String", "Time"};
        Object[][] data = new Object[hm.keySet().size()][columnNames.length];
        Set<String> keys = hm.keySet();
        int i = 0;
        for(String query : keys)
        {
            data[i][0] = i+1;
            data[i][1] = query;
            Query q = hm.get(query);
            /* Get the date*/
            logger.debug("Timestamp : " + q.timestamp);
            
            
            String dateStr = "";
            try {
                SimpleDateFormat simpleDateFormat = new SimpleDateFormat("MM/dd/yyyy' 'HH:MM:ss:S");
                dateStr = simpleDateFormat.format(q.timestamp*1000);
            } catch (Exception ex) {
                logger.error("Error Converting timestamp : " + ex.getMessage());;
                dateStr = "";
            }
            data[i][2] = dateStr;
            logger.debug("Date : " + dateStr);
            i++;
        }
        
        TableModel tableModel = new DefaultTableModel(data, columnNames) {

            @Override
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }

            public Class getColumnClass(int c) {
                if (getRowCount() > 0) {
                    return getValueAt(0, c).getClass();
                } else {
                    return Object.class;
                }
            }
            public String getColumnName(int col) {
                return columnNames[col];
        }

        };

        return tableModel;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        historytitlelbl = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setAutoscrolls(true);

        historytitlelbl.setBackground(new java.awt.Color(0, 0, 255));
        historytitlelbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        historytitlelbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        historytitlelbl.setText("My Search History");
        historytitlelbl.setToolTipText("Click to Run Query");

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "S. No", "Query String", "Time"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(historytitlelbl, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(historytitlelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (jTable1.rowAtPoint(evt.getPoint()) > -1) {
            int selectedRowIndex = jTable1.convertRowIndexToModel(jTable1.rowAtPoint(evt.getPoint()));
            String searchQuery = (String)jTable1.getModel().getValueAt(selectedRowIndex, 1); 
            Query q = this.historyMap.get(searchQuery); 
            UiUtils.displayQueryStartInfoMessage(q.flag, searchQuery);
            displayMaster.getSearchMaster().fetchResults(q, CommonUtils.getMaxResultsByQueryType(q.flag),q.num_results);
            displayMaster.hideHistoryPanel();
        }
    }//GEN-LAST:event_jTable1MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel historytitlelbl;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
