/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ResultCountPanel.java
 *
 * Created on Mar 26, 2013, 5:12:09 AM
 */
package citalyser.ui.visualization.panels.common.searchpanel.advancedsearchpanel;

import citalyser.ui.control.DisplayMaster;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Tanmay Patil
 */
public class ResultCountPanel extends javax.swing.JPanel {

    /** Creates new form ResultCountPanel */
    public ResultCountPanel() {
        initComponents();
    }

    public void setDisplayMaster(DisplayMaster displayMaster) {
        this.displayMaster = displayMaster;
    }
    
    private DisplayMaster displayMaster;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));
        numResults = new javax.swing.JTextField();

        setBackground(new java.awt.Color(59, 89, 152));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Number of Results");
        add(jLabel2);
        add(filler1);

        numResults.setColumns(4);
        numResults.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        numResults.setText("100");
        numResults.setMinimumSize(new java.awt.Dimension(6, 15));
        numResults.setPreferredSize(new java.awt.Dimension(38, 15));
        numResults.getDocument().addDocumentListener( new DocumentListener()
            {
                @Override
                public void changedUpdate(DocumentEvent e) { textChanged(e); }
                @Override
                public void insertUpdate(DocumentEvent e) { textChanged(e); }
                @Override
                public void removeUpdate(DocumentEvent e) { textChanged(e); }
                private void textChanged(DocumentEvent e)
                {
                    try {
                        displayMaster.setNumberOfResults(Integer.parseInt(numResults.getText()));
                        if (displayMaster.getNumberOfResults() > 0 && displayMaster.getNumberOfResults() < 1000) {
                            displayMaster.displayStatusMessage(" ");
                        } else {
                            if (displayMaster.getNumberOfResults() < 0) {
                                displayMaster.displayStatusMessage("Please enter a positive number.");
                                displayMaster.setNumberOfResults(100);
                            } else {
                                displayMaster.displayStatusMessage("Google scholars allows only 1000 results.");
                                displayMaster.setNumberOfResults(1000);
                            }
                        }
                    } catch (NumberFormatException numberFormatException) {
                        displayMaster.setNumberOfResults(100);
                        displayMaster.displayStatusMessage("Please enter a valid integer");
                    }
                }
            } );
            add(numResults);
        }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField numResults;
    // End of variables declaration//GEN-END:variables
}
