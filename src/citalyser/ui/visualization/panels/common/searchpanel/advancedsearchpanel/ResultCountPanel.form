<?xml version="1.1" encoding="UTF-8" ?>

<Form version="1.5" maxVersion="1.7" type="org.netbeans.modules.form.forminfo.JPanelFormInfo">
  <Properties>
    <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
      <Color blue="98" green="59" red="3b" type="rgb"/>
    </Property>
  </Properties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,0,15,0,0,0,122"/>
  </AuxValues>

  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignBoxLayout"/>
  <SubComponents>
    <Component class="javax.swing.JLabel" name="jLabel2">
      <Properties>
        <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
          <Color blue="ff" green="ff" red="ff" type="rgb"/>
        </Property>
        <Property name="text" type="java.lang.String" value="Number of Results"/>
      </Properties>
    </Component>
    <Component class="javax.swing.Box$Filler" name="filler1">
      <Properties>
        <Property name="maximumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
          <Dimension value="[5, 32767]"/>
        </Property>
        <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
          <Dimension value="[5, 0]"/>
        </Property>
        <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
          <Dimension value="[5, 0]"/>
        </Property>
      </Properties>
      <AuxValues>
        <AuxValue name="classDetails" type="java.lang.String" value="Box.Filler.HorizontalStrut"/>
      </AuxValues>
    </Component>
    <Component class="javax.swing.JTextField" name="numResults">
      <Properties>
        <Property name="columns" type="int" value="4"/>
        <Property name="horizontalAlignment" type="int" value="11"/>
        <Property name="text" type="java.lang.String" value="100"/>
        <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
          <Dimension value="[6, 15]"/>
        </Property>
        <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
          <Dimension value="[38, 15]"/>
        </Property>
      </Properties>
      <AuxValues>
        <AuxValue name="JavaCodeGenerator_AddingCodePre" type="java.lang.String" value="numResults.getDocument().addDocumentListener( new DocumentListener()&#xd;&#xa;{&#xd;&#xa;@Override&#xd;&#xa;public void changedUpdate(DocumentEvent e) { textChanged(e); }&#xd;&#xa;@Override&#xd;&#xa;public void insertUpdate(DocumentEvent e) { textChanged(e); }&#xd;&#xa;@Override&#xd;&#xa;public void removeUpdate(DocumentEvent e) { textChanged(e); }&#xd;&#xa;private void textChanged(DocumentEvent e)&#xd;&#xa;{&#xd;&#xa;try {&#xd;&#xa;            displayMaster.setNumberOfResults(Integer.parseInt(numResults.getText()));&#xd;&#xa;            if (displayMaster.getNumberOfResults() &lt; 0 || displayMaster.getNumberOfResults() &gt; 1000) {&#xd;&#xa;                displayMaster.displayStatusMessage(&quot; &quot;);&#xd;&#xa;            } else {&#xd;&#xa;                if (displayMaster.getNumberOfResults() &lt; 0) {&#xd;&#xa;                    displayMaster.displayStatusMessage(&quot;Please enter a positive number.&quot;);&#xd;&#xa;                    displayMaster.setNumberOfResults(100);&#xd;&#xa;                } else {&#xd;&#xa;                    displayMaster.displayStatusMessage(&quot;Google scholars allows only 1000 results.&quot;);&#xd;&#xa;                    displayMaster.setNumberOfResults(1000);&#xd;&#xa;                }&#xd;&#xa;            }&#xd;&#xa;        } catch (NumberFormatException ex) {&#xd;&#xa;            displayMaster.setNumberOfResults(100);&#xd;&#xa;            displayMaster.displayStatusMessage(&quot;Please enter a valid integer&quot;);&#xd;&#xa;        }&#xd;&#xa;}&#xd;&#xa;} );"/>
      </AuxValues>
    </Component>
  </SubComponents>
</Form>
