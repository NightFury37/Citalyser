/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * RegularDisplayPanel.java
 *
 * Created on Mar 9, 2013, 3:23:38 AM
 */
package citalyser.ui.visualization.panels;

import citalyser.ui.control.DisplayMaster;
import citalyser.ui.visualization.panels.regulardisplaypanel.DataVisualizationPanel;
import citalyser.ui.visualization.panels.regulardisplaypanel.StatusDisplayPanel;
import citalyser.ui.visualization.panels.regulardisplaypanel.HeaderPanel;
import citalyser.ui.visualization.panels.regulardisplaypanel.SidebarPanel;
import citalyser.ui.visualization.panels.regulardisplaypanel.ToolsPanel;

/**
 *
 * @author Tanmay Patil
 */
public class RegularDisplayPanel extends javax.swing.JPanel {
    
    private class PainterThread extends Thread {
        
        private int dividerLocation;

        public PainterThread(int dividerLocation) {
            this.dividerLocation = dividerLocation;
        }

        @Override
        public void run() {
            jSplitPane1.setDividerLocation(dividerLocation);
        }
        
    }

    /** Creates new form RegularDisplayPanel */
    public RegularDisplayPanel() {
        initComponents();
        javax.swing.plaf.basic.BasicSplitPaneDivider divider = (javax.swing.plaf.basic.BasicSplitPaneDivider) jSplitPane1.getComponent(0);
        divider.setBackground(java.awt.Color.WHITE);
        divider.setBorder(null);
    }

    public HeaderPanel getHeaderPanel() {
        return headerPanel;
    }

    public ToolsPanel getToolsPanel() {
        return toolsPanel;
    }

    public SidebarPanel getSidebarPanel() {
        return sidebarPanel;
    }

    public DataVisualizationPanel getDataVisualizationPanel() {
        return dataVisualizationPanel;
    }

    public StatusDisplayPanel getStatusDisplayPanel() {
        return statusDisplayPanel;
    }
    
    public void setDisplayMaster(DisplayMaster displayMaster) {
        this.displayMaster = displayMaster;
        this.headerPanel.setDisplayMaster(displayMaster);
        this.toolsPanel.setDisplayMaster(displayMaster);
        this.sidebarPanel.setDisplayMaster(displayMaster);
        this.dataVisualizationPanel.setDisplayMaster(displayMaster);
        this.statusDisplayPanel.setDisplayMaster(displayMaster);
    }
            
    private DisplayMaster displayMaster;
    private boolean statusPanelVisible = false;
    private boolean animating = false;

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerPanel = new citalyser.ui.visualization.panels.regulardisplaypanel.HeaderPanel();
        toolsPanel = new citalyser.ui.visualization.panels.regulardisplaypanel.ToolsPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        dataVisualizationPanel = new citalyser.ui.visualization.panels.regulardisplaypanel.DataVisualizationPanel();
        statusDisplayPanel = new citalyser.ui.visualization.panels.regulardisplaypanel.StatusDisplayPanel();
        sidebarPanel = new citalyser.ui.visualization.panels.regulardisplaypanel.SidebarPanel();

        setBackground(new java.awt.Color(255, 255, 255));

        jSplitPane1.setBackground(new java.awt.Color(255, 255, 255));
        jSplitPane1.setBorder(null);
        jSplitPane1.setDividerLocation(536);
        jSplitPane1.setDividerSize(0);
        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setToolTipText("");
        jSplitPane1.setContinuousLayout(true);
        jSplitPane1.setOneTouchExpandable(true);
        jSplitPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                jSplitPane1ComponentResized(evt);
            }
        });
        jSplitPane1.setTopComponent(dataVisualizationPanel);

        javax.swing.GroupLayout statusDisplayPanelLayout = new javax.swing.GroupLayout(statusDisplayPanel);
        statusDisplayPanel.setLayout(statusDisplayPanelLayout);
        statusDisplayPanelLayout.setHorizontalGroup(
            statusDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1087, Short.MAX_VALUE)
        );
        statusDisplayPanelLayout.setVerticalGroup(
            statusDisplayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jSplitPane1.setRightComponent(statusDisplayPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1351, Short.MAX_VALUE)
            .addComponent(toolsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1351, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(sidebarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1087, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toolsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sidebarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
                    .addComponent(jSplitPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jSplitPane1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jSplitPane1ComponentResized
        if (!animating) {
            if (statusPanelVisible) {
                jSplitPane1.setDividerLocation(jSplitPane1.getHeight() - statusDisplayPanel.getPreferredSize().height);
            } else {
                jSplitPane1.setDividerLocation(jSplitPane1.getHeight());
            }
        }
    }//GEN-LAST:event_jSplitPane1ComponentResized

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private citalyser.ui.visualization.panels.regulardisplaypanel.DataVisualizationPanel dataVisualizationPanel;
    private citalyser.ui.visualization.panels.regulardisplaypanel.HeaderPanel headerPanel;
    private javax.swing.JSplitPane jSplitPane1;
    private citalyser.ui.visualization.panels.regulardisplaypanel.SidebarPanel sidebarPanel;
    private citalyser.ui.visualization.panels.regulardisplaypanel.StatusDisplayPanel statusDisplayPanel;
    private citalyser.ui.visualization.panels.regulardisplaypanel.ToolsPanel toolsPanel;
    // End of variables declaration//GEN-END:variables

    /*public void showStatusPanel() {
        if (!animating && !statusPanelVisible) {
            statusPanelVisible = true;
            new Thread() {

                @Override
                public void run() {
                    PainterThread painterThread = new PainterThread(0);
                    animating = true;
                    for (int i = jSplitPane1.getHeight(); i > jSplitPane1.getHeight() - 30; i--) {
                        if (!painterThread.isAlive()) {
                            painterThread = new PainterThread(i);
                            painterThread.start();
                        }
                        try {
                           Thread.sleep(20);
                        } catch (InterruptedException ex) {
                            ex.printStackTrace();
                        }
                    }
                    try {
                        Thread.sleep(2500);
                    } catch (InterruptedException ex) {
                        ex.printStackTrace();
                    }
                    for (int i = jSplitPane1.getHeight() - 30; i < jSplitPane1.getHeight(); i++) {
                        if (!painterThread.isAlive()) {
                            painterThread = new PainterThread(i);
                            painterThread.start();
                        }
                        try {
                            Thread.sleep(20);
                        } catch (InterruptedException ex) {
                            ex.printStackTrace();
                        }
                    }
                    displayMaster.clearStatusPanel();
                    animating = false;
                }
            }.start();
            statusPanelVisible = false;
        }
    }*/
}
